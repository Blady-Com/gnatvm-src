-- Autogenerated by CIL2Ada v. 2
with MSSyst.Object;
with CIL_Types;
use CIL_Types;
limited with Microsoft.VisualStudio.TextManager.Interop.IVsTextView;
with Microsoft.VisualStudio.TextManager.Interop.TextSpan;
with MSSyst.IDisposable;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package Microsoft.VisualStudio.Package_k.Declarations is
   type Typ is abstract new MSSyst.Object.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array (Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Dispose
     (This : access Typ);
   function get_LastBestMatch
     (This : access Typ) return access MSSyst.String.Typ'Class;
   procedure GetBestMatch
     (This : access Typ;
      value : access MSSyst.String.Typ'Class;
      index : CIL_Types.Int32_addrof;
      uniqueMatch : CIL_Types.Bool_addrof);
   function GetCount
     (This : access Typ) return Integer;
   function GetDescription
     (This : access Typ;
      index : Integer) return access MSSyst.String.Typ'Class;
   function GetDisplayText
     (This : access Typ;
      index : Integer) return access MSSyst.String.Typ'Class;
   function GetGlyph
     (This : access Typ;
      index : Integer) return Integer;
   function GetInitialExtent
     (This : access Typ;
      textView : access Microsoft.VisualStudio.TextManager.Interop.IVsTextView.Typ'Class;
      line : CIL_Types.Int32_addrof;
      startIdx : CIL_Types.Int32_addrof;
      endIdx : CIL_Types.Int32_addrof) return Standard.Boolean;
   function GetName
     (This : access Typ;
      index : Integer) return access MSSyst.String.Typ'Class;
   function IsCommitChar
     (This : access Typ;
      textSoFar : access MSSyst.String.Typ'Class;
      selected : Integer;
      commitCharacter : Wide_Character) return Standard.Boolean;
   function IsMatch
     (This : access Typ;
      textSoFar : access MSSyst.String.Typ'Class;
      index : Integer) return Standard.Boolean;
   function OnAutoComplete
     (This : access Typ;
      textView : access Microsoft.VisualStudio.TextManager.Interop.IVsTextView.Typ'Class;
      committedText : access MSSyst.String.Typ'Class;
      commitCharacter : Wide_Character;
      index : Integer) return Wide_Character;
   function OnCommit
     (This : access Typ;
      textView : access Microsoft.VisualStudio.TextManager.Interop.IVsTextView.Typ'Class;
      textSoFar : access MSSyst.String.Typ'Class;
      commitCharacter : Wide_Character;
      index : Integer;
      initialExtent : access Microsoft.VisualStudio.TextManager.Interop.TextSpan.Valuetype) return access MSSyst.String.Typ'Class;
   procedure set_LastBestMatch
     (This : access Typ;
      value : access MSSyst.String.Typ'Class);
private
   pragma Convention (CIL, Typ);
   pragma Import (CIL, Dispose, "Dispose");
   pragma Import (CIL, get_LastBestMatch, "get_LastBestMatch");
   pragma Import (CIL, GetBestMatch, "GetBestMatch");
   pragma Import (CIL, GetCount, "GetCount");
   pragma Import (CIL, GetDescription, "GetDescription");
   pragma Import (CIL, GetDisplayText, "GetDisplayText");
   pragma Import (CIL, GetGlyph, "GetGlyph");
   pragma Import (CIL, GetInitialExtent, "GetInitialExtent");
   pragma Import (CIL, GetName, "GetName");
   pragma Import (CIL, IsCommitChar, "IsCommitChar");
   pragma Import (CIL, IsMatch, "IsMatch");
   pragma Import (CIL, OnAutoComplete, "OnAutoComplete");
   pragma Import (CIL, OnCommit, "OnCommit");
   pragma Import (CIL, set_LastBestMatch, "set_LastBestMatch");
end Microsoft.VisualStudio.Package_k.Declarations;
pragma Import (CIL, Microsoft.VisualStudio.Package_k.Declarations,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[Microsoft.VisualStudio.Package.LanguageService]Microsoft.VisualStudio.Package.Declarations");
