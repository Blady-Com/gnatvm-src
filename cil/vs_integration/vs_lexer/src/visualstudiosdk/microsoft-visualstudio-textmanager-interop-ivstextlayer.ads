-- Autogenerated by CIL2Ada v. 2
with MSSyst.Object;
with CIL_Types;
use CIL_Types;
limited with Microsoft.VisualStudio.TextManager.Interop.IVsEnumLayerMarkers;
limited with Microsoft.VisualStudio.TextManager.Interop.IVsEnumTextSpans;
limited with Microsoft.VisualStudio.TextManager.Interop.IVsTextLines;
limited with Microsoft.VisualStudio.TextManager.Interop.IVsTextTrackingPoint;
with Microsoft.VisualStudio.TextManager.Interop.LINEDATAEX;
with Microsoft.VisualStudio.TextManager.Interop.MARKERDATA;
with Microsoft.VisualStudio.TextManager.Interop.TextSpan;
limited with MSSyst.String;
package Microsoft.VisualStudio.TextManager.Interop.IVsTextLayer is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array (Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function BaseLineIndexToLocal
     (This : access Typ;
      iBaseLine : Integer;
      iBaseIndex : Integer;
      piLocalLine : CIL_Types.Int32_addrof;
      piLocalIndex : CIL_Types.Int32_addrof) return Integer is abstract;
   function CanReplaceLines
     (This : access Typ;
      iStartLine : Integer;
      iStartIndex : Integer;
      iEndLine : Integer;
      iEndIndex : Integer;
      iNewLen : Integer) return Integer is abstract;
   function CopyLineText
     (This : access Typ;
      iStartLine : Integer;
      iStartIndex : Integer;
      iEndLine : Integer;
      iEndIndex : Integer;
      pszBuf : CIL_Types.native_int;
      pcchBuf : CIL_Types.Int32_addrof) return Integer is abstract;
   function CreateTrackingPoint
     (This : access Typ;
      iLine : Integer;
      iIndex : Integer;
      ppMarker : access Microsoft.VisualStudio.TextManager.Interop.IVsTextTrackingPoint.Ref) return Integer is abstract;
   function DeeperLayerLineIndexToLocal
     (This : access Typ;
      dwFlags : CIL_Types.Unsigned_Integer;
      pTargetLayer : access Microsoft.VisualStudio.TextManager.Interop.IVsTextLayer.Typ'Class;
      iLayerLine : Integer;
      iLayerIndex : Integer;
      piLocalLine : CIL_Types.Int32_addrof;
      piLocalIndex : CIL_Types.Int32_addrof) return Integer is abstract;
   function EnumLayerMarkers
     (This : access Typ;
      iStartLine : Integer;
      iStartIndex : Integer;
      iEndLine : Integer;
      iEndIndex : Integer;
      iMarkerType : Integer;
      dwFlags : CIL_Types.Unsigned_Integer;
      ppEnum : access Microsoft.VisualStudio.TextManager.Interop.IVsEnumLayerMarkers.Ref) return Integer is abstract;
   function GetBaseBuffer
     (This : access Typ;
      ppiBuf : access Microsoft.VisualStudio.TextManager.Interop.IVsTextLines.Ref) return Integer is abstract;
   function GetLastLineIndex
     (This : access Typ;
      piLine : CIL_Types.Int32_addrof;
      piIndex : CIL_Types.Int32_addrof) return Integer is abstract;
   function GetLengthOfLine
     (This : access Typ;
      iLine : Integer;
      piLength : CIL_Types.Int32_addrof) return Integer is abstract;
   function GetLineCount
     (This : access Typ;
      piLineCount : CIL_Types.Int32_addrof) return Integer is abstract;
   function GetLineDataEx
     (This : access Typ;
      dwFlags : CIL_Types.Unsigned_Integer;
      iLine : Integer;
      iStartIndex : Integer;
      iEndIndex : Integer;
      pLineData : access Microsoft.VisualStudio.TextManager.Interop.LINEDATAEX.Valuetype_arr;
      pMarkerData : access Microsoft.VisualStudio.TextManager.Interop.MARKERDATA.Valuetype_arr) return Integer is abstract;
   function GetLineText
     (This : access Typ;
      iStartLine : Integer;
      iStartIndex : Integer;
      iEndLine : Integer;
      iEndIndex : Integer;
      pbstrBuf : access MSSyst.String.Ref) return Integer is abstract;
   function GetMarkerData
     (This : access Typ;
      iTopLine : Integer;
      iBottomLine : Integer;
      pMarkerData : access Microsoft.VisualStudio.TextManager.Interop.MARKERDATA.Valuetype_arr) return Integer is abstract;
   function LocalLineIndexToBase
     (This : access Typ;
      iLocalLine : Integer;
      iLocalIndex : Integer;
      piBaseLine : CIL_Types.Int32_addrof;
      piBaseIndex : CIL_Types.Int32_addrof) return Integer is abstract;
   function LocalLineIndexToDeeperLayer
     (This : access Typ;
      pTargetLayer : access Microsoft.VisualStudio.TextManager.Interop.IVsTextLayer.Typ'Class;
      iLocalLine : Integer;
      iLocalIndex : Integer;
      piTargetLine : CIL_Types.Int32_addrof;
      piTargetIndex : CIL_Types.Int32_addrof) return Integer is abstract;
   function LockBufferEx
     (This : access Typ;
      dwFlags : CIL_Types.Unsigned_Integer) return Integer is abstract;
   function MapLocalSpansToTextOriginatingLayer
     (This : access Typ;
      dwFlags : CIL_Types.Unsigned_Integer;
      pLocalSpanEnum : access Microsoft.VisualStudio.TextManager.Interop.IVsEnumTextSpans.Typ'Class;
      ppTargetLayer : access Microsoft.VisualStudio.TextManager.Interop.IVsTextLayer.Ref;
      ppTargetSpanEnum : access Microsoft.VisualStudio.TextManager.Interop.IVsEnumTextSpans.Ref) return Integer is abstract;
   function ReleaseLineDataEx
     (This : access Typ;
      pLineData : access Microsoft.VisualStudio.TextManager.Interop.LINEDATAEX.Valuetype_arr) return Integer is abstract;
   function ReleaseMarkerData
     (This : access Typ;
      pMarkerData : access Microsoft.VisualStudio.TextManager.Interop.MARKERDATA.Valuetype_arr) return Integer is abstract;
   function ReplaceLines
     (This : access Typ;
      iStartLine : Integer;
      iStartIndex : Integer;
      iEndLine : Integer;
      iEndIndex : Integer;
      pszText : CIL_Types.native_int;
      iNewLen : Integer;
      pChangedSpan : access Microsoft.VisualStudio.TextManager.Interop.TextSpan.Valuetype_arr) return Integer is abstract;
   function ReplaceLinesEx
     (This : access Typ;
      dwFlags : CIL_Types.Unsigned_Integer;
      iStartLine : Integer;
      iStartIndex : Integer;
      iEndLine : Integer;
      iEndIndex : Integer;
      pszText : CIL_Types.native_int;
      iNewLen : Integer;
      pChangedSpan : access Microsoft.VisualStudio.TextManager.Interop.TextSpan.Valuetype_arr) return Integer is abstract;
   function UnlockBufferEx
     (This : access Typ;
      dwFlags : CIL_Types.Unsigned_Integer) return Integer is abstract;
private
   pragma Import (CIL, BaseLineIndexToLocal, "BaseLineIndexToLocal");
   pragma Import (CIL, CanReplaceLines, "CanReplaceLines");
   pragma Import (CIL, CopyLineText, "CopyLineText");
   pragma Import (CIL, CreateTrackingPoint, "CreateTrackingPoint");
   pragma Import (CIL, DeeperLayerLineIndexToLocal, "DeeperLayerLineIndexToLocal");
   pragma Import (CIL, EnumLayerMarkers, "EnumLayerMarkers");
   pragma Import (CIL, GetBaseBuffer, "GetBaseBuffer");
   pragma Import (CIL, GetLastLineIndex, "GetLastLineIndex");
   pragma Import (CIL, GetLengthOfLine, "GetLengthOfLine");
   pragma Import (CIL, GetLineCount, "GetLineCount");
   pragma Import (CIL, GetLineDataEx, "GetLineDataEx");
   pragma Import (CIL, GetLineText, "GetLineText");
   pragma Import (CIL, GetMarkerData, "GetMarkerData");
   pragma Import (CIL, LocalLineIndexToBase, "LocalLineIndexToBase");
   pragma Import (CIL, LocalLineIndexToDeeperLayer, "LocalLineIndexToDeeperLayer");
   pragma Import (CIL, LockBufferEx, "LockBufferEx");
   pragma Import (CIL, MapLocalSpansToTextOriginatingLayer, "MapLocalSpansToTextOriginatingLayer");
   pragma Import (CIL, ReleaseLineDataEx, "ReleaseLineDataEx");
   pragma Import (CIL, ReleaseMarkerData, "ReleaseMarkerData");
   pragma Import (CIL, ReplaceLines, "ReplaceLines");
   pragma Import (CIL, ReplaceLinesEx, "ReplaceLinesEx");
   pragma Import (CIL, UnlockBufferEx, "UnlockBufferEx");
end Microsoft.VisualStudio.TextManager.Interop.IVsTextLayer;
pragma Import (CIL, Microsoft.VisualStudio.TextManager.Interop.IVsTextLayer,
   ".ver 7:1:40304:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[Microsoft.VisualStudio.TextManager.Interop]Microsoft.VisualStudio.TextManager.Interop.IVsTextLayer");
