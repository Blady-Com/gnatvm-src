-- Autogenerated by CIL2Ada v. 2
with MSSyst.Object;
with CIL_Types;
use CIL_Types;
package Microsoft.VisualStudio.OLE.Interop.ISequentialStream is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array (Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Read
     (This : access Typ;
      pv : CIL_Types.unsigned_int8_Arr;
      cb : CIL_Types.Unsigned_Integer;
      pcbRead : CIL_Types.Unsigned_Integer_addrof) is abstract;
   procedure Write
     (This : access Typ;
      pv : CIL_Types.unsigned_int8_Arr;
      cb : CIL_Types.Unsigned_Integer;
      pcbWritten : CIL_Types.Unsigned_Integer_addrof) is abstract;
private
   pragma Import (CIL, Read, "Read");
   pragma Import (CIL, Write, "Write");
end Microsoft.VisualStudio.OLE.Interop.ISequentialStream;
pragma Import (CIL, Microsoft.VisualStudio.OLE.Interop.ISequentialStream,
   ".ver 7:1:40304:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[Microsoft.VisualStudio.OLE.Interop]Microsoft.VisualStudio.OLE.Interop.ISequentialStream");
